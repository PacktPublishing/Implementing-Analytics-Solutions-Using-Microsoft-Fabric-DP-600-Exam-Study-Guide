# Basic Summary Statistics Using Pandas
# This script uses Pandas to load a dataset and print summary statistics.
# Requires Pandas installed: pip install pandas

import pandas as pd

data = pd.read_csv('dataset.csv')
print(data.describe())




# Checking Data Types and Summarizing Data with Pandas
# Uses Pandas to check data types and print summary statistics for all columns.
# Requires Pandas installed: pip install pandas

print(data.dtypes)
print(data.describe())




# Creating a Histogram in Python
# Uses Matplotlib to create a histogram of the 'age' column.
# Requires Matplotlib installed: pip install matplotlib

import matplotlib.pyplot as plt

data['age'].hist()
plt.show()




// Connecting to SQL Database in Power BI
// Power Query M script to connect to an SQL database and retrieve the Sales table.
// Use this script in Power BI's Power Query editor.

let 
    Source = Sql.Database("server_name", "database_name"),
    SalesData = Source{[Schema="dbo",Item="Sales"]}[Data]
in 
    SalesData




# Detecting Anomalies with Boxplot in Python
# Uses Seaborn to create a boxplot to visually detect anomalies in the 'sales' column.
# Requires Seaborn installed: pip install seaborn

import seaborn as sns
sns.boxplot(data['sales'])




# Implementing K-means Clustering in Python
# Uses Scikit-Learn to perform K-means clustering on 'feature1' and 'feature2' columns.
# Requires Scikit-Learn installed: pip install scikit-learn

from sklearn.cluster import KMeans

model = KMeans(n_clusters=3)
model.fit(data[['feature1', 'feature2']])




# Running a Spark Job in Synapse for Large Dataset
# This PySpark script loads and displays data from a large CSV file in Azure Synapse Analytics.
# Requires PySpark environment, e.g., in Synapse or Databricks.

df = spark.read.csv('/mnt/data/large_dataset.csv')
df.show()




// Using Dataflows in Power BI to Merge Data Sources
// Power Query M script to combine data from two sources (a CSV file and SQL database).
// Use this script in Power BI's Power Query editor.

let 
    Source1 = Csv.Document(File.Contents("source1.csv")),
    Source2 = Sql.Database("server_name", "db_name")
in 
    Table.Combine({Source1, Source2})



-- Performing a Left Outer Join in SQL
-- SQL script to perform a left join between 'customers' and 'sales' tables based on customer_id.
-- Run this in a SQL environment, such as Microsoft SQL Server, MySQL, or PostgreSQL.

SELECT * 
FROM customers c 
LEFT JOIN sales s ON c.customer_id = s.customer_id;
